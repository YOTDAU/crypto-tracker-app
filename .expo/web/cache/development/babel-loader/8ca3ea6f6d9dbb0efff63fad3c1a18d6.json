{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { FETCHING_COIN_DATA, FETCHING_COIN_DATA_SUCCESS, FETCHING_COIN_DATA_FAIL } from \"./../Utilities/ActionTypes\";\nvar initialState = {\n  isFetching: false,\n  data: [],\n  hasError: false,\n  errorMessage: null\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCHING_COIN_DATA:\n      return _extends(state, {\n        isFetching: true,\n        data: null,\n        hasError: false,\n        errorMessage: null\n      });\n\n    case FETCHING_COIN_DATA_SUCCESS:\n      return _extends(state, {\n        isFetching: false,\n        data: action.payload.data,\n        hasError: false,\n        errorMessage: null\n      });\n\n    case FETCHING_COIN_DATA_FAIL:\n      return _extends(state, {\n        isFetching: false,\n        data: null,\n        hasError: true,\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/simon/Documents/GitHub/Crypto-Tracker/crypto-tracker-v1/src/Reducers/CryptoReducer.js"],"names":["FETCHING_COIN_DATA","FETCHING_COIN_DATA_SUCCESS","FETCHING_COIN_DATA_FAIL","initialState","isFetching","data","hasError","errorMessage","state","action","type","payload"],"mappings":";AAAA,SACIA,kBADJ,EAEIC,0BAFJ,EAGIC,uBAHJ;AAMA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,QAAQ,EAAE,KAHO;AAIjBC,EAAAA,YAAY,EAAE;AAJG,CAArB;AAOA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAElD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKV,kBAAL;AACI,aAAO,SAAcQ,KAAd,EAAqB;AACxBJ,QAAAA,UAAU,EAAE,IADY;AAExBC,QAAAA,IAAI,EAAE,IAFkB;AAGxBC,QAAAA,QAAQ,EAAE,KAHc;AAIxBC,QAAAA,YAAY,EAAE;AAJU,OAArB,CAAP;;AAOJ,SAAKN,0BAAL;AACI,aAAO,SAAcO,KAAd,EAAqB;AACxBJ,QAAAA,UAAU,EAAE,KADY;AAExBC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN,IAFG;AAGxBC,QAAAA,QAAQ,EAAE,KAHc;AAIxBC,QAAAA,YAAY,EAAE;AAJU,OAArB,CAAP;;AAOJ,SAAKL,uBAAL;AACI,aAAO,SAAcM,KAAd,EAAqB;AACxBJ,QAAAA,UAAU,EAAE,KADY;AAExBC,QAAAA,IAAI,EAAE,IAFkB;AAGxBC,QAAAA,QAAQ,EAAE,IAHc;AAIxBC,QAAAA,YAAY,EAAEE,MAAM,CAACE;AAJG,OAArB,CAAP;;AAQJ;AACI,aAAOH,KAAP;AA5BR;AA+BH","sourcesContent":["import {\n    FETCHING_COIN_DATA,\n    FETCHING_COIN_DATA_SUCCESS,\n    FETCHING_COIN_DATA_FAIL\n} from './../Utilities/ActionTypes';\n\nconst initialState = {\n    isFetching: false,\n    data: [],\n    hasError: false,\n    errorMessage: null\n}\n\nexport default function(state = initialState, action) {\n\n    switch(action.type) {\n\n        case FETCHING_COIN_DATA:\n            return Object.assign(state, {\n                isFetching: true,\n                data: null,\n                hasError: false,\n                errorMessage: null\n            });\n\n        case FETCHING_COIN_DATA_SUCCESS:\n            return Object.assign(state, {\n                isFetching: false,\n                data: action.payload.data,\n                hasError: false,\n                errorMessage: null\n            });\n\n        case FETCHING_COIN_DATA_FAIL:\n            return Object.assign(state, {\n                isFetching: false,\n                data: null,\n                hasError: true,\n                errorMessage: action.payload\n            });\n\n    \n        default:\n            return state;\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}