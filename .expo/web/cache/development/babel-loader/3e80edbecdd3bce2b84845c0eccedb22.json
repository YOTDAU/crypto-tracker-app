{"ast":null,"code":"var initialState = {\n  isFetching: null,\n  data: [],\n  hasError: false,\n  errorMessage: null\n};\nvar cryptoState = [];\n\nvar CryptoReducer = function CryptoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n};\n\nexport default CryptoReducer;","map":{"version":3,"sources":["/Users/simon/Documents/GitHub/Crypto-Tracker/crypto-tracker-v1/src/Reducers/CryptoReducer.js"],"names":["initialState","isFetching","data","hasError","errorMessage","cryptoState","CryptoReducer","state","action"],"mappings":"AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,IADK;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,QAAQ,EAAE,KAHO;AAIjBC,EAAAA,YAAY,EAAE;AAJG,CAArB;AAOA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BP,YAA0B;AAAA,MAAZQ,MAAY;AACrD,SAAOD,KAAP;AACH,CAFD;;AAIA,eAAeD,aAAf","sourcesContent":["const initialState = {\n    isFetching: null,\n    data: [],\n    hasError: false,\n    errorMessage: null\n}\n\nlet cryptoState = [] \n\nconst CryptoReducer = (state = initialState, action ) => {\n    return state \n}\n\nexport default CryptoReducer"]},"metadata":{},"sourceType":"module"}