{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/simon/Documents/GitHub/Crypto-Tracker/crypto-tracker-v1/src/components/CryptoContainer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar CryptoContainer = function (_React$Component) {\n  _inherits(CryptoContainer, _React$Component);\n\n  var _super = _createSuper(CryptoContainer);\n\n  function CryptoContainer() {\n    _classCallCheck(this, CryptoContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CryptoContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }, \"CryptoContainer\"));\n    }\n  }]);\n\n  return CryptoContainer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    crypto: state.crypto\n  };\n}\n\nexport default connect(mapStateToProps)(CryptoContainer);","map":{"version":3,"sources":["/Users/simon/Documents/GitHub/Crypto-Tracker/crypto-tracker-v1/src/components/CryptoContainer.js"],"names":["React","connect","CryptoContainer","Component","mapStateToProps","state","crypto"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;IAGMC,e;;;;;;;;;;;;;6BACO;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAOH;;;;EATyBF,KAAK,CAACG,S;;AAYpC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACC;AADX,GAAP;AAGH;;AAED,eAAeL,OAAO,CAACG,eAAD,CAAP,CAAyBF,eAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text } from 'react-native';\n\nclass CryptoContainer extends React.Component {\n    render() {\n        return (\n            <View>\n                <Text>\n                    CryptoContainer\n                </Text>\n            </View>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        crypto: state.crypto\n    }\n}\n\nexport default connect(mapStateToProps)(CryptoContainer)"]},"metadata":{},"sourceType":"module"}