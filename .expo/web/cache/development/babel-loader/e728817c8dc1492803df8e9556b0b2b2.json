{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/simon/Documents/GitHub/Crypto-Tracker/crypto-tracker-v1/src/components/CryptoContainer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FetchCoinData from \"./../Actions/FetchCoinData\";\nimport CoinCard from \"./CoinCard\";\n\nvar CryptoContainer = function (_Component) {\n  _inherits(CryptoContainer, _Component);\n\n  var _super = _createSuper(CryptoContainer);\n\n  function CryptoContainer() {\n    _classCallCheck(this, CryptoContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CryptoContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      this.props.FetchCoinData().then(function (data) {\n        return _this.setState({\n          crypto: data\n        });\n      });\n    }\n  }, {\n    key: \"renderCoinCards\",\n    value: function renderCoinCards() {\n      var crypto = this.props.crypto;\n      console.log(crypto);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, this.renderCoinCards);\n    }\n  }]);\n\n  return CryptoContainer;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    crypto: state.crypto\n  };\n}\n\nexport default connect(mapStateToProps, {\n  FetchCoinData: FetchCoinData\n})(CryptoContainer);","map":{"version":3,"sources":["/Users/simon/Documents/GitHub/Crypto-Tracker/crypto-tracker-v1/src/components/CryptoContainer.js"],"names":["React","Component","connect","FetchCoinData","CoinCard","CryptoContainer","props","then","data","setState","crypto","console","log","renderCoinCards","mapStateToProps","state"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;;AAIA,OAAOC,aAAP;AACA,OAAOC,QAAP;;IAGMC,e;;;;;;;;;;;;;wCAEkB;AAAA;;AAChB,WAAKC,KAAL,CAAWH,aAAX,GAA2BI,IAA3B,CAAgC,UAAAC,IAAI;AAAA,eAAI,KAAI,CAACC,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAEF;AAAT,SAAd,CAAJ;AAAA,OAApC;AACH;;;sCAEiB;AAAA,UACNE,MADM,GACK,KAAKJ,KADV,CACNI,MADM;AAEdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKG,eADV,CADJ;AAKH;;;;EAjByBZ,S;;AAoB9B,SAASa,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHL,IAAAA,MAAM,EAAEK,KAAK,CAACL;AADX,GAAP;AAGH;;AAGD,eAAeR,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA,aAAa,EAAbA;AAAF,CAAlB,CAAP,CAA4CE,eAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text, ScrollView, StyleSheet } from 'react-native';\n// import { Spinner } from 'react-native-loading '\n\nimport FetchCoinData from './../Actions/FetchCoinData';\nimport CoinCard from './CoinCard'\n\n\nclass CryptoContainer extends Component {\n\n    componentDidMount() {\n        this.props.FetchCoinData().then(data => this.setState({crypto: data}));\n    }\n\n    renderCoinCards() {\n        const { crypto } = this.props\n        console.log(crypto)\n    }\n\n    render() {\n        return (\n            <View>\n                {this.renderCoinCards}\n            </View>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        crypto: state.crypto\n    }\n}\n\n\nexport default connect(mapStateToProps, { FetchCoinData })(CryptoContainer)"]},"metadata":{},"sourceType":"module"}