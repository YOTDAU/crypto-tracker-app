{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { FETCHING_COIN_DATA, FETCHING_COIN_DATA_SUCCESS, FETCHING_COIN_DATA_FAIL } from \"../Utilities/ActionTypes\";\nvar initialState = {\n  isFetching: null,\n  data: [],\n  hasError: false,\n  errorMessage: null\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCHING_COIN_DATA:\n      return _extends({}, state, {\n        isFetching: true,\n        data: null,\n        hasError: false,\n        errorMessage: null\n      });\n\n    case FETCHING_COIN_DATA_SUCCESS:\n      return _extends({}, state, {\n        isFetching: false,\n        data: action.payload,\n        hasError: false,\n        errorMessage: null\n      });\n\n    case FETCHING_COIN_DATA_FAIL:\n      return _extends({}, state, {\n        isFetching: false,\n        data: action.payload,\n        hasError: true,\n        errorMessage: action.err\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/simon/Documents/GitHub/Crypto-Tracker/crypto-tracker-v1/src/Reducers/CryptoReducer.js"],"names":["FETCHING_COIN_DATA","FETCHING_COIN_DATA_SUCCESS","FETCHING_COIN_DATA_FAIL","initialState","isFetching","data","hasError","errorMessage","state","action","type","payload","err"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,0BAA7B,EAAyDC,uBAAzD;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,IADK;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,QAAQ,EAAE,KAHO;AAIjBC,EAAAA,YAAY,EAAE;AAJG,CAArB;AAOA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAElD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,kBAAL;AACI,aAAO,SAAc,EAAd,EAAkBQ,KAAlB,EAAyB;AAC5BJ,QAAAA,UAAU,EAAE,IADgB;AAE5BC,QAAAA,IAAI,EAAE,IAFsB;AAG5BC,QAAAA,QAAQ,EAAE,KAHkB;AAI5BC,QAAAA,YAAY,EAAE;AAJc,OAAzB,CAAP;;AAOJ,SAAKN,0BAAL;AACI,aAAO,SAAc,EAAd,EAAkBO,KAAlB,EAAyB;AAC5BJ,QAAAA,UAAU,EAAE,KADgB;AAE5BC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAFe;AAG5BL,QAAAA,QAAQ,EAAE,KAHkB;AAI5BC,QAAAA,YAAY,EAAE;AAJc,OAAzB,CAAP;;AAOJ,SAAKL,uBAAL;AACI,aAAO,SAAc,EAAd,EAAkBM,KAAlB,EAAyB;AAC5BJ,QAAAA,UAAU,EAAE,KADgB;AAE5BC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAFe;AAG5BL,QAAAA,QAAQ,EAAE,IAHkB;AAI5BC,QAAAA,YAAY,EAAEE,MAAM,CAACG;AAJO,OAAzB,CAAP;;AAQJ;AACI,aAAOJ,KAAP;AA3BR;AA6BH","sourcesContent":["import { FETCHING_COIN_DATA, FETCHING_COIN_DATA_SUCCESS, FETCHING_COIN_DATA_FAIL} from '../Utilities/ActionTypes'\n\nconst initialState = {\n    isFetching: null,\n    data: [],\n    hasError: false,\n    errorMessage: null\n}\n\nexport default function(state = initialState, action) {\n\n    switch(action.type) {\n        case FETCHING_COIN_DATA: \n            return Object.assign({}, state, {\n                isFetching: true,\n                data: null,\n                hasError: false,\n                errorMessage: null\n        });\n\n        case FETCHING_COIN_DATA_SUCCESS:\n            return Object.assign({}, state, {\n                isFetching: false,\n                data: action.payload,\n                hasError: false,\n                errorMessage: null\n            });\n\n        case FETCHING_COIN_DATA_FAIL: \n            return Object.assign({}, state, {\n                isFetching: false,\n                data: action.payload,\n                hasError: true, \n                errorMessage: action.err\n            })\n\n\n        default: \n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}